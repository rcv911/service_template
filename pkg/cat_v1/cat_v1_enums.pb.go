// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v5.28.3
// source: cat_v1/cat_v1_enums.proto

package cat_v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// DoorStatus статус двери
type DoorStatus int32

const (
	DoorStatus_DOOR_UNKNOWN  DoorStatus = 0 // Неизвестно
	DoorStatus_DOOR_THINKING DoorStatus = 1 // Стоит в дверях и думает
	DoorStatus_DOOR_ENTERING DoorStatus = 2 // Входит обратно
	DoorStatus_DOOR_EXITED   DoorStatus = 3 // Покинул помещение
)

// Enum value maps for DoorStatus.
var (
	DoorStatus_name = map[int32]string{
		0: "DOOR_UNKNOWN",
		1: "DOOR_THINKING",
		2: "DOOR_ENTERING",
		3: "DOOR_EXITED",
	}
	DoorStatus_value = map[string]int32{
		"DOOR_UNKNOWN":  0,
		"DOOR_THINKING": 1,
		"DOOR_ENTERING": 2,
		"DOOR_EXITED":   3,
	}
)

func (x DoorStatus) Enum() *DoorStatus {
	p := new(DoorStatus)
	*p = x
	return p
}

func (x DoorStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DoorStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_cat_v1_cat_v1_enums_proto_enumTypes[0].Descriptor()
}

func (DoorStatus) Type() protoreflect.EnumType {
	return &file_cat_v1_cat_v1_enums_proto_enumTypes[0]
}

func (x DoorStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DoorStatus.Descriptor instead.
func (DoorStatus) EnumDescriptor() ([]byte, []int) {
	return file_cat_v1_cat_v1_enums_proto_rawDescGZIP(), []int{0}
}

// FeedReaction реакция кота на кормление
type FeedReaction int32

const (
	FeedReaction_REACTION_UNKNOWN         FeedReaction = 0 // Неизвестно
	FeedReaction_REACTION_MEOW            FeedReaction = 1 // Мяу
	FeedReaction_REACTION_PURR            FeedReaction = 2 // Урчит
	FeedReaction_REACTION_HISS            FeedReaction = 3 // Фыркает
	FeedReaction_REACTION_GROWL           FeedReaction = 4 // Рычит
	FeedReaction_REACTION_SNIFF_AND_LEAVE FeedReaction = 5 // Понюхал и ушёл
)

// Enum value maps for FeedReaction.
var (
	FeedReaction_name = map[int32]string{
		0: "REACTION_UNKNOWN",
		1: "REACTION_MEOW",
		2: "REACTION_PURR",
		3: "REACTION_HISS",
		4: "REACTION_GROWL",
		5: "REACTION_SNIFF_AND_LEAVE",
	}
	FeedReaction_value = map[string]int32{
		"REACTION_UNKNOWN":         0,
		"REACTION_MEOW":            1,
		"REACTION_PURR":            2,
		"REACTION_HISS":            3,
		"REACTION_GROWL":           4,
		"REACTION_SNIFF_AND_LEAVE": 5,
	}
)

func (x FeedReaction) Enum() *FeedReaction {
	p := new(FeedReaction)
	*p = x
	return p
}

func (x FeedReaction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FeedReaction) Descriptor() protoreflect.EnumDescriptor {
	return file_cat_v1_cat_v1_enums_proto_enumTypes[1].Descriptor()
}

func (FeedReaction) Type() protoreflect.EnumType {
	return &file_cat_v1_cat_v1_enums_proto_enumTypes[1]
}

func (x FeedReaction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FeedReaction.Descriptor instead.
func (FeedReaction) EnumDescriptor() ([]byte, []int) {
	return file_cat_v1_cat_v1_enums_proto_rawDescGZIP(), []int{1}
}

// CatMood настроения кота
type CatMood int32

const (
	CatMood_MOOD_UNKNOWN CatMood = 0 // Неизвестно
	CatMood_MOOD_HAPPY   CatMood = 1 // Счастлив
	CatMood_MOOD_ANGRY   CatMood = 2 // Злой
	CatMood_MOOD_CONTENT CatMood = 3 // Доволен
	CatMood_MOOD_PLAYFUL CatMood = 4 // Игривый
	CatMood_MOOD_CALM    CatMood = 5 // Спокойный
)

// Enum value maps for CatMood.
var (
	CatMood_name = map[int32]string{
		0: "MOOD_UNKNOWN",
		1: "MOOD_HAPPY",
		2: "MOOD_ANGRY",
		3: "MOOD_CONTENT",
		4: "MOOD_PLAYFUL",
		5: "MOOD_CALM",
	}
	CatMood_value = map[string]int32{
		"MOOD_UNKNOWN": 0,
		"MOOD_HAPPY":   1,
		"MOOD_ANGRY":   2,
		"MOOD_CONTENT": 3,
		"MOOD_PLAYFUL": 4,
		"MOOD_CALM":    5,
	}
)

func (x CatMood) Enum() *CatMood {
	p := new(CatMood)
	*p = x
	return p
}

func (x CatMood) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CatMood) Descriptor() protoreflect.EnumDescriptor {
	return file_cat_v1_cat_v1_enums_proto_enumTypes[2].Descriptor()
}

func (CatMood) Type() protoreflect.EnumType {
	return &file_cat_v1_cat_v1_enums_proto_enumTypes[2]
}

func (x CatMood) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CatMood.Descriptor instead.
func (CatMood) EnumDescriptor() ([]byte, []int) {
	return file_cat_v1_cat_v1_enums_proto_rawDescGZIP(), []int{2}
}

var File_cat_v1_cat_v1_enums_proto protoreflect.FileDescriptor

var file_cat_v1_cat_v1_enums_proto_rawDesc = []byte{
	0x0a, 0x19, 0x63, 0x61, 0x74, 0x5f, 0x76, 0x31, 0x2f, 0x63, 0x61, 0x74, 0x5f, 0x76, 0x31, 0x5f,
	0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x63, 0x61, 0x74,
	0x5f, 0x76, 0x31, 0x2a, 0x55, 0x0a, 0x0a, 0x44, 0x6f, 0x6f, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x10, 0x0a, 0x0c, 0x44, 0x4f, 0x4f, 0x52, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57,
	0x4e, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x44, 0x4f, 0x4f, 0x52, 0x5f, 0x54, 0x48, 0x49, 0x4e,
	0x4b, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x44, 0x4f, 0x4f, 0x52, 0x5f, 0x45,
	0x4e, 0x54, 0x45, 0x52, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x44, 0x4f, 0x4f,
	0x52, 0x5f, 0x45, 0x58, 0x49, 0x54, 0x45, 0x44, 0x10, 0x03, 0x2a, 0x8f, 0x01, 0x0a, 0x0c, 0x46,
	0x65, 0x65, 0x64, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x10, 0x52,
	0x45, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10,
	0x00, 0x12, 0x11, 0x0a, 0x0d, 0x52, 0x45, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4d, 0x45,
	0x4f, 0x57, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x52, 0x45, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e,
	0x5f, 0x50, 0x55, 0x52, 0x52, 0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d, 0x52, 0x45, 0x41, 0x43, 0x54,
	0x49, 0x4f, 0x4e, 0x5f, 0x48, 0x49, 0x53, 0x53, 0x10, 0x03, 0x12, 0x12, 0x0a, 0x0e, 0x52, 0x45,
	0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x47, 0x52, 0x4f, 0x57, 0x4c, 0x10, 0x04, 0x12, 0x1c,
	0x0a, 0x18, 0x52, 0x45, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x4e, 0x49, 0x46, 0x46,
	0x5f, 0x41, 0x4e, 0x44, 0x5f, 0x4c, 0x45, 0x41, 0x56, 0x45, 0x10, 0x05, 0x2a, 0x6e, 0x0a, 0x07,
	0x43, 0x61, 0x74, 0x4d, 0x6f, 0x6f, 0x64, 0x12, 0x10, 0x0a, 0x0c, 0x4d, 0x4f, 0x4f, 0x44, 0x5f,
	0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x4d, 0x4f, 0x4f,
	0x44, 0x5f, 0x48, 0x41, 0x50, 0x50, 0x59, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x4d, 0x4f, 0x4f,
	0x44, 0x5f, 0x41, 0x4e, 0x47, 0x52, 0x59, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c, 0x4d, 0x4f, 0x4f,
	0x44, 0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x45, 0x4e, 0x54, 0x10, 0x03, 0x12, 0x10, 0x0a, 0x0c, 0x4d,
	0x4f, 0x4f, 0x44, 0x5f, 0x50, 0x4c, 0x41, 0x59, 0x46, 0x55, 0x4c, 0x10, 0x04, 0x12, 0x0d, 0x0a,
	0x09, 0x4d, 0x4f, 0x4f, 0x44, 0x5f, 0x43, 0x41, 0x4c, 0x4d, 0x10, 0x05, 0x42, 0x36, 0x5a, 0x34,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x72, 0x63, 0x76, 0x39, 0x31,
	0x31, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x63, 0x61, 0x74, 0x5f, 0x76, 0x31, 0x3b, 0x63, 0x61,
	0x74, 0x5f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cat_v1_cat_v1_enums_proto_rawDescOnce sync.Once
	file_cat_v1_cat_v1_enums_proto_rawDescData = file_cat_v1_cat_v1_enums_proto_rawDesc
)

func file_cat_v1_cat_v1_enums_proto_rawDescGZIP() []byte {
	file_cat_v1_cat_v1_enums_proto_rawDescOnce.Do(func() {
		file_cat_v1_cat_v1_enums_proto_rawDescData = protoimpl.X.CompressGZIP(file_cat_v1_cat_v1_enums_proto_rawDescData)
	})
	return file_cat_v1_cat_v1_enums_proto_rawDescData
}

var file_cat_v1_cat_v1_enums_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_cat_v1_cat_v1_enums_proto_goTypes = []any{
	(DoorStatus)(0),   // 0: cat_v1.DoorStatus
	(FeedReaction)(0), // 1: cat_v1.FeedReaction
	(CatMood)(0),      // 2: cat_v1.CatMood
}
var file_cat_v1_cat_v1_enums_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_cat_v1_cat_v1_enums_proto_init() }
func file_cat_v1_cat_v1_enums_proto_init() {
	if File_cat_v1_cat_v1_enums_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cat_v1_cat_v1_enums_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_cat_v1_cat_v1_enums_proto_goTypes,
		DependencyIndexes: file_cat_v1_cat_v1_enums_proto_depIdxs,
		EnumInfos:         file_cat_v1_cat_v1_enums_proto_enumTypes,
	}.Build()
	File_cat_v1_cat_v1_enums_proto = out.File
	file_cat_v1_cat_v1_enums_proto_rawDesc = nil
	file_cat_v1_cat_v1_enums_proto_goTypes = nil
	file_cat_v1_cat_v1_enums_proto_depIdxs = nil
}
